name: Continuous Delivery

on:
  push:
    branches:
      - master

env:
  RELEASE_TAG: ${{ github.sha }}
  ECR_REPOSITORY: chemondis/duckling
  K8S_NAMESPACE: duckling
  K8S_SERVICE: chemondis-duckling

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Stack
        uses: actions/cache@v2
        with:
          path: |
            ~/.stack
            ./.stack-work
          key: ${{ runner.os }}-stack-${{ hashFiles('**/stack.yaml.lock') }}-

      - name: Setup Haskell
        uses: actions/setup-haskell@v1.1.3
        with:
          enable-stack: true
        
      - name: Run Tests
        run: |  # It's important to regenerate the classifiers after updating the code and before running the test suite.
          stack build :duckling-regen-exe && stack exec duckling-regen-exe && stack test

  build:
    runs-on: ubuntu-latest
    needs: [ test ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image and push to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$RELEASE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$RELEASE_TAG

  deploy-dev:
    runs-on: ubuntu-latest
    needs: [ release ]
    strategy:
      matrix:
        kube-config-data:  # designates different clusters i.e dev/prod
          - ${{ secrets.KUBE_CONFIG_DATA_DEV }}
          - ${{ secrets.KUBE_CONFIG_DATA_PRD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Helm Deploy
        uses: koslibpro/helm-eks-action@master
        env:
          KUBE_CONFIG_DATA: ${{ matrix.kube-config-data }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        with:
          command: |
            helm upgrade ${K8S_SERVICE} --install --wait ./helm-chart \
              --namespace ${K8S_NAMESPACE}
              --set image.repository=${ECR_REGISTRY}/${ECR_REPOSITORY} \
              --set image.tag=${RELEASE_TAG} \
              -f ./helm-chart/values.yaml
